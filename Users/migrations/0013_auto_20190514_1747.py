# Generated by Django 2.2.1 on 2019-05-14 17:47

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Users', '0012_auto_20190514_1445'),
    ]

    operations = [
        migrations.AlterField(
            model_name='cards',
            name='cvc',
            field=models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('^.{3}[0-9]*$', 'Only numeric characters are allowed.', 'invalid_cvc')]),
        ),
        migrations.AlterField(
            model_name='cards',
            name='name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-ZáðéíóúýþæöÁÐÉÍÓÚÝÞÆÖ ]*$', 'Only alphabetic characters are allowed.', 'invalid_name')]),
        ),
        migrations.AlterField(
            model_name='cards',
            name='number',
            field=models.CharField(max_length=16, validators=[django.core.validators.RegexValidator('^.{16}[0-9]*$', 'Only numeric characters are allowed.', 'invalid_card_number')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='city',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[a-zA-ZáðéíóúýþæöÁÐÉÍÓÚÝÞÆÖ ]*$', 'Only alphabetic characters are allowed.', 'invalid_name')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='house_number',
            field=models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.', 'invalid house number')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='mobile',
            field=models.CharField(max_length=7, validators=[django.core.validators.RegexValidator('^.{7}[0-9]*$', 'Only numeric characters are allowed.', 'invalid mobile')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-ZáðéíóúýþæöÁÐÉÍÓÚÝÞÆÖ ]*$', 'Only alphanumeric characters are allowed.', 'invalid name')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='social',
            field=models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^.{10}[0-9]*$', 'Only numeric characters are allowed.', 'invalid_social')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='street_name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-ZáðéíóúýþæöÁÐÉÍÓÚÝÞÆÖ ]*$', 'Only alphanumeric characters are allowed.', 'invalid street name')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='zipCode',
            field=models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Only alphanumeric characters are allowed.', 'invalid zip')]),
        ),
        migrations.AlterField(
            model_name='profiles',
            name='address',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-ZáðéíóúýþæöÁÐÉÍÓÚÝÞÆÖ -]*$', 'Only alphanumeric characters are allowed.', 'invalid address')]),
        ),
        migrations.AlterField(
            model_name='profiles',
            name='name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-ZáðéíóúýþæöÁÐÉÍÓÚÝÞÆÖ ]*$', 'Only alphanumeric characters are allowed.', 'invalid name')]),
        ),
        migrations.AlterField(
            model_name='profiles',
            name='social',
            field=models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^.{10}[0-9]*$', 'Only numeric characters are allowed.', 'invalid social')]),
        ),
    ]
