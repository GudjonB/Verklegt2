# Generated by Django 2.2.1 on 2019-05-14 19:28

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Users', '0013_auto_20190514_1747'),
    ]

    operations = [
        migrations.AlterField(
            model_name='cards',
            name='cvc',
            field=models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('^.{3}[0-9]*$', 'CVC must be 3 characters long and must only contain numbers')]),
        ),
        migrations.AlterField(
            model_name='cards',
            name='name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-ZáðéíóúýþæöÁÐÉÍÓÚÝÞÆÖ ]*$', 'Name must only contain alphabetic characters')]),
        ),
        migrations.AlterField(
            model_name='cards',
            name='number',
            field=models.CharField(max_length=16, validators=[django.core.validators.RegexValidator('^.{16}[0-9]*$', 'Credit card number must be 16 characters long and must only contain numbers')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='city',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-ZáðéíóúýþæöÁÐÉÍÓÚÝÞÆÖ ]*$', 'City must only contain alphabetic characters')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='house_number',
            field=models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Invalid character in house number')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='mobile',
            field=models.CharField(max_length=7, validators=[django.core.validators.RegexValidator('^.{7}[0-9]*$', 'Mobile must be 7 digits long and must only contain numbers')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-ZáðéíóúýþæöÁÐÉÍÓÚÝÞÆÖ ]*$', 'Name must only contain alphabetic characters')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='social',
            field=models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^.{10}[0-9]*$', 'Social security number must be 10 digits long and must only contain numbers')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='street_name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-ZáðéíóúýþæöÁÐÉÍÓÚÝÞÆÖ ]*$', 'Street name must only contain alphabetic characters')]),
        ),
        migrations.AlterField(
            model_name='checkoutinfo',
            name='zipCode',
            field=models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Zip must only contain numbers')]),
        ),
        migrations.AlterField(
            model_name='country',
            name='country',
            field=models.CharField(max_length=155, validators=[django.core.validators.RegexValidator('[a-zA-Z0-9 -]+$', 'Invalid country name')]),
        ),
        migrations.AlterField(
            model_name='profiles',
            name='address',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-ZáðéíóúýþæöÁÐÉÍÓÚÝÞÆÖ -]*$', 'Invalid character in address')]),
        ),
        migrations.AlterField(
            model_name='profiles',
            name='name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-ZáðéíóúýþæöÁÐÉÍÓÚÝÞÆÖ ]*$', 'Name must only contain alphabetic characters')]),
        ),
        migrations.AlterField(
            model_name='profiles',
            name='social',
            field=models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^.{10}[0-9]*$', 'Social security number must be 10 digits long and must only contain numbers')]),
        ),
    ]
